name: Automerge Workflow
on:
  workflow_call:
    inputs:
      pull_request_review_state:
        description: Pull request review state (advances for APPROVED)
        required: true
        type: string
      pull_request_head_branch:
        description: Origin pull request branch
        required: true
        type: string
      pull_request_base_branch:
        description: Destination pull request branch
        required: true
        type: string
      pull_request_title:
        description: Pull request title
        required: true
        type: string
      pull_request_number:
        description: Pull request identification number (adds link in the commit message directly to the pull request)
        required: true
        type: string
      pull_request_full_organization_repo_name:
        description: Pull request full name for the organization repo (e.g. getpassport/notification_service_python)
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write

env:
  USER_NAME: davikawasaki
  USER_EMAIL: davishinjik@gmail.com

jobs:
  trigger-on-approval:
    if: inputs.pull_request_review_state == 'APPROVED'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
      with:
        token: ${{ secrets.CI_TOKEN }}

    - name: Debug status
      env:
        STATE: ${{ inputs.pull_request_review_state }}
        HEAD_REF: ${{ inputs.pull_request_head_branch }}
        BASE_REF: ${{ inputs.pull_request_base_branch }}
      run: |
        echo "Event state: $STATE"
        git branch
        echo "head: $HEAD_REF"
        echo "base: $BASE_REF"

    - name: Check if pull request has been reviewed by all actors
      env:
        GH_TOKEN: ${{ secrets.CI_TOKEN }}
        PR_NUMBER: ${{ inputs.pull_request_number }}
        ORG_REPO: ${{ inputs.pull_request_full_organization_repo_name }}
      run: |
        pr_details=$(gh pr view "https://github.com/$ORG_REPO/pull/$PR_NUMBER" --json mergeStateStatus,reviewDecision)

        merge_state_status=$(echo -E "$pr_details" | jq -c '.mergeStateStatus')
        echo "$merge_state_status"

        review_decision=$(echo -E "$pr_details" | jq -c '.reviewDecision')
        echo "$review_decision"

        if [[ "$merge_state_status" == "\"BLOCKED\"" && "$review_decision" != "\"APPROVED\"" ]]; then
          echo "Pull request is not ready to be merged due to checks or quantity of reviewers. Review decision: $review_decision."
          exit 1
        fi

    - name: Auto-merge with --ff-only on UAT and main branches
      if: inputs.pull_request_base_branch == 'main' || inputs.pull_request_base_branch == 'uat'
      env:
        GH_TOKEN: ${{ secrets.CI_TOKEN }}
        HEAD_REF: ${{ inputs.pull_request_head_branch }}
        BASE_REF: ${{ inputs.pull_request_base_branch }}
      run: |
        git config --global user.name "$USER_NAME"
        git config --global user.email "$USER_EMAIL"
        git fetch
        git checkout "$BASE_REF"
        git merge --ff-only "origin/$HEAD_REF"
        git push -u origin "$BASE_REF"

    - name: Auto-merge with --squash on develop branches
      if: inputs.pull_request_base_branch == 'develop'
      env:
        GH_TOKEN: ${{ secrets.CI_TOKEN }}
        PR_NUMBER: ${{ inputs.pull_request_number }}
        ORG_REPO: ${{ inputs.pull_request_full_organization_repo_name }}
      run: |
        git config --global user.name "$USER_NAME"
        git config --global user.email "$USER_EMAIL"

        gh pr merge --squash --delete-branch "https://github.com/$ORG_REPO/pull/$PR_NUMBER"
