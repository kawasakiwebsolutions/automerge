name: Pull Request Status Auto-merge
on:
  pull_request_review:
    types: [submitted]

permissions:
  contents: write
  pull-requests: write

env:
  USER_NAME: davikawasaki
  USER_EMAIL: davishinjik@gmail.com

jobs:
  trigger-on-approval:
    if: github.event.review.state == 'APPROVED'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
      # with:
        # token: ${{ secrets.CI_TOKEN }}
    - name: Debug status
      env:
        STATE: ${{ github.event.review.state }}
        HEAD_REF: ${{ github.event.pull_request.head.ref }}
        BASE_REF: ${{ github.event.pull_request.base.ref }}
      run: |
        echo "Event state: $STATE"
        git branch
        echo "head: $HEAD_REF"
        echo "base: $BASE_REF"
    - name: Auto-merge with --ff-only on UAT and main branches
      if: github.event.pull_request.base.ref == 'main' || github.event.pull_request.base.ref == 'uat'
      env:
        GH_TOKEN: ${{ secrets.CI_TOKEN }}
        BASE_REF: ${{ github.event.pull_request.base.ref }}
        HEAD_REF: ${{ github.event.pull_request.head.ref }}
      run: |
        git config --global user.name "$USER_NAME"
        git config --global user.email "$USER_EMAIL"
        git fetch
        git checkout "$BASE_REF"
        git merge --ff-only "origin/$HEAD_REF"
        git push -u origin "$BASE_REF"
    - name: Auto-merge with --squash on develop branches
      if: github.event.pull_request.base.ref == 'develop'
      env:
        GH_TOKEN: ${{ secrets.CI_TOKEN }}
        BASE_REF: ${{ github.event.pull_request.base.ref }}
        HEAD_REF: ${{ github.event.pull_request.head.ref }}
        PR_TITLE: ${{ github.event.pull_request.title }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        ORG_REPO: ${{ github.repository }}
      run: |
        list_commits_gh=$(curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/$ORG_REPO/pulls/$PR_NUMBER/commits" \
          | jq -c '.')

        list_commits_description=$(echo -E "$list_commits_gh" | jq -c 'map("\r\n* " + .commit.message + "\r\n") | join("")')

        git config --global user.name "$USER_NAME"
        git config --global user.email "$USER_EMAIL"

        curl -L \
          -X PUT \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -H "Authorization: Bearer $GH_TOKEN" \
          "https://api.github.com/repos/$ORG_REPO/pulls/$PR_NUMBER/merge" \
          -d '{ "commit_title": "'"$PR_TITLE (#$PR_NUMBER)"'", "commit_message": '"$list_commits_description"', "merge_method": "squash" }'
    - name: Remove feature branch that are merged to the develop branch
      if: github.event.pull_request.head.ref != 'main' && github.event.pull_request.head.ref != 'uat' && github.event.pull_request.head.ref != 'develop'
      env:
        HEAD_REF: ${{ github.event.pull_request.head.ref }}
      run: |
        echo "Deleting branch $HEAD_REF..."
        git push origin -d "$HEAD_REF"
